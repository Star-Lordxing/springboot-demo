spring:
  profiles:
    active: dev,devMsg,message
  thymeleaf:
    suffix: .html
    cache: false
  devtools:
    restart:
      enabled: true
      additional-paths: /src/main/java
      exclude: ../templates

spring.datasource:
    type: com.alibaba.druid.pool.DruidDataSource    # 配置当前要使用的数据源的操作类型
    driver-class-name: org.gjt.mm.mysql.Driver     # 配置MySQL的驱动程序类
    url: jdbc:mysql://47.52.199.51:3306/test?useUnicode=true&amp;characterEncoding=utf8# 数据库连接地址
    username: test # 数据库用户名
    password: Zhuxing520@ # 数据库连接密码
    filer: wall,stat
    dbcp2:                                          # 进行数据库连接池的配置
      min-idle: 5                                   # 数据库连接池的最小维持连接数
      initial-size: 5                               # 初始化提供的连接数
      max-total: 5                                  # 最大的连接数
      max-wait-millis: 200                          # 等待连接获取的最大超时时间
mybatis:
  config-location: classpath:mapper/mybatis.cfg.xml    # mybatis配置文件所在路径
  type-aliases-package: com.example.demo.po            # 定义所有实体类的别名所在包
  mapper-locations:  classpath:mapper/*Mapper.xml      # 所有的mapper映射文件

spring.kafka:     # 指定kafka 代理地址，可以多个
      bootstrap-servers: 47.52.199.51:9092
      template:    # 指定默认topic id
        default-topic: producer
      listener:   # 指定listener 容器中的线程数，用于提高并发量
        concurrency: 5
      consumer:
        group-id: myGroup # 指定默认消费者group id
        client-id: 200
        max-poll-records: 200
        enable-auto-commit: false
        auto-offset-reset: earliest # 最早未被消费的offset
        fetch-min-size: 10
      producer:
        batch-size: 1000 # 每次批量发送消息的数量
        retries: 3
        client-id: 200

spring.mail:
    host: smtp.163.com
    username: 18842688753@163.com
    password: XXXX
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.starttls.required: true
    port: 25

spring.redis:
    host: 47.52.199.51
    port: 6379
    password: 123456
    timeout: 1000
    database: 0
    jedis:
      pool:
        max-active: 1
        max-idle: 8
        min-idle: 0
        max-wait: 100
spring.redis-two:
    host: 47.52.199.51
    port: 6379
    password: 123456
    timeout: 1000
    database: 0
    pool:
      max-active: 10
      max-idle: 8
      min-idle: 2
      max-wait: 100

restTemplate:
  connectTimeout: 2000 #连接超时默认2s
  readTimeout: 30000 #读取超时默认30s
  maxConnectPerRoute: 20 #个主机的最大连接数
  maxTotalConnect : 10 #连接池的最大连接数默认为0

#最大连接数
http.maxTotal: 100
#并发数
http.defaultMaxPerRoute: 20
#创建连接的最长时间
http.connectTimeout: 1000
#从连接池中获取到连接的最长时间
http.connectionRequestTimeout: 500
#数据传输的最长时间
http.socketTimeout: 10000
#提交请求前测试连接是否可用
http.staleConnectionCheckEnabled: true
#可用空闲连接过期时间,重用空闲连接时会先检查是否空闲时间超过这个时间，如果超过，释放socket重新建立
http.validateAfterInactivity: 3000000

pagehelper:
    helperDialect: mysql
    reasonable: true #开启优化，<1页返回第一页
    supportMethodsArguments: true #是否支持接口参数来传递分页参数，默认false
    pageSizeZero: false #pageSize=0 返回所有
    params: count=countSql




---
#开发环境配置
spring:
  profiles: dev
server:
  port: 8080
---
#测试环境配置
spring:
  profiles: test
server:
  port: 8081
---
#生产环境配置
spring:
  profiles: pro
server:
  port: 8082